type CoolFirstPart {
  name: Int!
}

type CoolId {
  firstPart: CoolFirstPart!
  secondPart: String!
}

type Account {
  id: CoolId!
  name: String!
  email: String!
  password: Int!
  likesDogs: Boolean!
}

type Query {
  accountById(id: String): Account
  accounts: [Account]
}

input CreateAccountInput {
  name: String!
  email: String!
  password: String!
}

input UpdateAccountNameInput {
  id: String!
  name: String!
}

input UpdateAccountPasswordInput {
  id: String!
  password: String!
}

type Mutation {
  createAccount(input: CreateAccountInput!): Account
  updateAccountName(input: UpdateAccountNameInput!): Account
  updateAccountPassword(input: UpdateAccountPasswordInput!): Account
  removeAccount(id: String!): Account
}
